version: '3'

services:

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0 # comando necessário no start do mysql - vai ser executado após o entrypoint
    container_name: db
    restart: always # restarta se o container cair
    tty: true # permite entra no container de modo interativo
    volumes:
      - ./mysql:/var/lib/mysql #volume que armazena o banco
    environment: # variáveis de ambiente para criação do banco (no caso dessa imagem que já cria o banco). Se você docker run normal, seria com a a opção -e
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=gtdiolino
      - MYSQL_PASSWORD=gtdiolino
    networks:
      - node-network
  
  app:
    container_name: app
    build:
      context: ./node
      dockerfile: Dockerfile.prod
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh # usa o dockerize para aguardar o mysql subir e depois chama o entrypoint da imagem (base) node
    command: node index.js
    networks:
      - node-network
    volumes:
      - ./node:/usr/src/app
    tty: true
    ports:
      - "3000:3000"
    depends_on:
      - db
  
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    networks:
      - node-network
    tty: true
    ports:
     - "8080:80"
    depends_on:
      - app

networks:
  node-network:
    driver: bridge